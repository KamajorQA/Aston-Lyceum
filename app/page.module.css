.main {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 2rem;
  padding: 4rem;
  flex: 1;
}

.repoLink {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(12rem, 1fr));
  column-gap: 1.5rem;
  row-gap: 1rem;
  align-content: flex-start;
  justify-content: center;
  align-items: center;
  max-width: 100%;
  text-align: center;
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  padding: 2rem 0;
}

.center::before {
  background: var(--secondary-glow);
  border-radius: 50%;
  width: 380px;
  height: 260px;
  margin-left: -400px;
}

.center::after {
  background: var(--primary-glow);
  width: 240px;
  height: 180px;
  z-index: -1;
}

.center::before,
.center::after {
  content: '';
  left: 50%;
  position: absolute;
  filter: blur(45px);
  transform: translateZ(0);
}

.logo {
  position: relative;
}

.paddingY {
  padding: 1rem 0;
}

.info {
  width: 100%;
  display: flex;
  flex-direction: column;
}

.spoiler {
  width: 40%;
  align-self: flex-end;
  opacity: 0.7;
}

.spoilerEnd {
  text-align: end;
}

.infoEnd {
  align-self: flex-end;
  text-align: center;
}

.infoWrap {
  align-items: center;
  gap: 1rem;
  text-align: center;
}

.textBlock {
  position: relative;
  margin: 0;
  padding: 1rem;
  background-color: rgba(var(--callout-rgb), 0.5);
  border: 1px solid rgba(var(--callout-border-rgb), 0.3);
  border-radius: var(--border-radius);
}

.subtleLink {
  transition: all 400ms ease-in;
}

.subtleLink:hover {
  opacity: 0.8;
  color: var(--color-primary);
}

/* Mobile */
@media (max-width: 700px) {
  .content {
    padding: 4rem;
  }

  .center::before {
    transform: none;
    height: 300px;
  }
}

@media (prefers-color-scheme: dark) {
  .vercelLogo {
    filter: invert(1);
  }

  .logo {
    filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
  }
}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}
